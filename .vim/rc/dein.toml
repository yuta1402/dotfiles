[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Shougo/vimshell.vim'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = get(g:, 'quickrun_config', {})

    let g:quickrun_config['_'] = {
    \    'runner' : 'vimproc',
    \    'runner/vimproc/updatetime' : 60,
    \    'outputter/buffer/split' : ':botright 8sp',
    \    'outputter/buffer/close_on_empty' : 1,
    \}

    let g:quickrun_config['tex'] = {
    \    'hook/cd/directory' : '%S:p:h',
    \    'command' : 'latexmk',
    \    'cmdopt' : '-pv',
    \    'srcfile' : '%:p:h:gs?$?/main.tex?',
    \}

    let g:quickrun_config['cpp'] = {
    \    'command' : 'g++',
    \    'cmdopt' : '-std=c++11',
    \}

    let g:quickrun_config['python'] = {
    \    'command' : 'python3',
    \}
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \    'colorscheme': 'wombat',
    \}
'''

[[plugins]]
repo = 'jonathanfilip/vim-lucius'
hook_add = '''
    let g:lucius_style = 'dark'
    let g:lucius_contrast = 'normal'
'''

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    autocmd BufWritePost * GitGutter
    set updatetime=100
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_fix_on_save = 1
    let g:ale_set_signs = 1
    let g:ale_sign_column_always = 1

    let g:ale_linters = {
    \   'javascript': ['eslint'],
    \   'go': ['golint', 'gofmt'],
    \   'cpp': [],
    \}

    let g:ale_fixers = {
    \   'javascript': ['prettier'],
    \   'typescript': ['prettier'],
    \   'typescriptreact': ['prettier'],
    \   'json': ['prettier'],
    \   'cpp': [],
    \   'rust': ['rustfmt']
    \}
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    " Disable default mappings
    let g:EasyMotion_do_mapping = 0

    " Turn on case-insensitive feature
    let g:EasyMotion_smartcase = 1

    " <Leader>s{char}{char} to move to {char}{char}
    nmap <Leader>s <Plug>(easymotion-overwin-f2)
    vmap <Leader>s <Plug>(easymotion-bd-f2)

    " Move to line
    map  <Leader>l <Plug>(easymotion-bd-jk)
    nmap <Leader>l <Plug>(easymotion-overwin-line)

    " Move to word
    map  <Leader>w <Plug>(easymotion-bd-w)
    nmap <Leader>w <Plug>(easymotion-overwin-w)
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
    function! s:on_lsp_buffer_enabled() abort
        setlocal omnifunc=lsp#complete
        setlocal signcolumn=yes
        nmap <buffer> gd <plug>(lsp-definition)
        nmap <buffer> gr <plug>(lsp-references)
        nmap <buffer> gi <plug>(lsp-implementation)
        nmap <buffer> gn <plug>(lsp-rename)
    endfunction

    augroup lsp_install
        au!
        " call s:on_lsp_buffer_enabled only for languages that has the server registered.
        autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
    augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'vim-denops/denops.vim'
