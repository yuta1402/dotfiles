[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1

    if !exists('g:deoplete#omni_patterns')
        let g:deoplete#omni_patterns = {}
    endif

    let g:deoplete#omni_patterns.typescript = '[^. *\t]\.\w*\|\h\w*::'
'''

# [[plugins]]
# if = 'has("nvim")'
# repo = 'mhartington/nvim-typescript'

[[plugins]]
repo = 'zchee/deoplete-go'
if = 'has("nvim")'
on_ft = ['go']
build = 'make'

# [[plugins]]
# repo = 'tweekmonster/deoplete-clang2'
# if = 'has("nvim")'
# on_ft = ['c', 'cpp']

[[plugins]]
repo = 'zchee/deoplete-clang'
if = 'has("nvim")'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']
hook_source = '''
    if system('git rev-parse --is-inside-work-tree') == "true\n"
        let s:git_root_directory = system('git rev-parse --show-cdup')
        let s:project_directory = expand(fnamemodify(s:git_root_directory, ':p:h'))
    endif

    if !exists('g:deoplete#sources#clang#flags')
        let g:deoplete#sources#clang#flags = []
    endif

    if exists('s:project_directory')
        let s:project_directory_include = s:project_directory . '/include'
        call add(g:deoplete#sources#clang#flags, '-I'.s:project_directory_include)
    endif

    let g:deoplete#sources#clang#sort_algo = 'priority'

    if has('mac')
        let g:deoplete#sources#clang#libclang_path='/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
        let g:deoplete#sources#clang#clang_header='/Library/Developer/CommandLineTools/usr/include'
    elseif has('unix')
        let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-3.8/lib/libclang.so'
        let g:deoplete#sources#clang#clang_header = '/usr/include/clang/'
    endif
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
if = 'has("nvim")'
on_ft = ['python']
